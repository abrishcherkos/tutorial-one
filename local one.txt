Python offers several libraries for creating animations, each with its strengths:

1. Turtle:

    Ideal for beginners due to its simplicity.
    Focuses on drawing shapes and moving a virtual turtle on the screen.
    Well-suited for basic 2D animations.

Here's a simple Turtle animation code:
Python

import turtle

# Create a screen and a turtle object
screen = turtle.Screen()
pen = turtle.Turtle()

# Set background color and pen color
screen.bgcolor("lightblue")
pen.color("red")

# Draw a square with animation
for _ in range(4):
    pen.forward(100)
    pen.right(90)

# Keep the window open until closed manually
screen.exitonclick()

Use code with caution.

2. Matplotlib:

    Known for data visualization and can be used for basic animations.
    Offers functionalities like FuncAnimation to update plots dynamically.
    More suited for animating data visualizations.

3. Pygame:

    Powerful library for creating full-fledged games and animations.
    Provides functionalities for handling graphics, sound, and user input.
    Requires more setup and understanding of game development concepts.

Here's a basic Pygame animation structure (code not included for brevity):
Python

import pygame

# Initialize Pygame
pygame.init()

# Create a screen and set caption
screen = pygame.display.set_mode((width, height))
pygame.display.set_caption("My Animation")

# Load image or create shapes for animation
# ...

# Game loop with animation logic
running = True
while running:
    # Handle events
    # Update animation elements (position, rotation, etc.)
    # Clear screen
    screen.fill((0, 0, 0))  # Fill with black color
    # Draw updated elements onto the screen
    # ...
    pygame.display.flip()  # Update the display

# Quit Pygame
pygame.quit()

